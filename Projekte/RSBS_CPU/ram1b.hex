;@F0 * @F1 = @F2
; 00 ... 15 Programm
@00:2F10; 			LOAD 0x10 		-|
@01:AFE0; 			STORE @LOOPCNT	LOOPCNT wird auf 16 gesetzt
@02:8FE0; LOOPS:	LOAD @LOOPCNT   --
@03:6010; 			JZ @ENDE 		Abbruch wenn LOOPCNT = 0 ist.
@04:1401; 			SUB 0x01  		  |	
@05:AFE0; 			STORE @LOOPCNT 	LOOTCNT--;
@06:8FF1; 			LOAD @OP2       --
@07:1101; 			AND 0x01 		  |	
@08:6003; 			JZ @SHIFT 		Sprung wenn NICHT addiert wird (OPS2 && 0x01 = 0)
@09:8FF2; 			LOAD @RES    	--
@0a:90F0; 			ADD @OP1 		  |
@0b:AFF2; 			STORE @RES 		RES += OPS1S
@0c:8FF1; SHIFT:	LOAD @OP2 		 --
@0d:1800; 			SHR		 		  |
@0e:AFF1; 			STORE @OP2 		OP2 wird durch einen Shift nach rechts halbiert
@0f:6004; 			JZ @ENDE		Abbruch wenn OPS == 0 ist
@10:8FF0; 			LOAD @OP1 		--
@11:1900; 			SHL		   		 |
@12:AFF0; 			STORE @OP1  	OP1 wird durch einen Shift nach links verdoppelt	
@13:4F02; 			JMP @LOOPS 		Sprung zum Schleifenstart
@14:2FFF; ENDE:		LOAD 0xFF  		Simulation wird durch Schreiben von 0xFF @0xFF gestopt
@15:AFFF; 			STORE @ENDSIM   -|
; e0 Temp Variablen
@e0:0000; @LOOPCNT
; f0 ... f2 Parameter und Ergebnis
@f0:FFFB; @OP1 -5 
@f1:FFFC; @OP2 -4
@f2:0000; @RES -5 * -4 = 20:10 = 14 :16
;ENDSIM
@ff:0000; @ENDSIM