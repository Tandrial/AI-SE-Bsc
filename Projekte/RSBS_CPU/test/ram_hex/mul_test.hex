--Zahlen im normalen Bereicht
@00:8FE0; 			LOAD @4
@01:92E1; 			MUL @5
@02:AFF0; 			STORE @ERG0

@03:8FE0; 			LOAD @4
@04:92E5; 			MUL @-5
@05:AFF1; 			STORE @ERG1

@06:8FE4; 			LOAD @-4 
@07:92E1; 			MUL @5
@08:AFF2; 			STORE @ERG2

@09:8FE4; 			LOAD @-4 
@0a:92E5; 			MUL @-5
@0b:AFF3; 			STORE @ERG3

-- Grenzen testen
@0c:8FE3; 			LOAD @2
@0d:92E2; 			MUL @16384
@0e:5F10:			JC next ohne store
@0f:AFF4; 			STORE @ERG4

@10:8FE3; 			LOAD @2
@11:92E6; 			MUL @-16384
@12:5F14;			JC next ohne store
@13:AFF5; 			STORE @ERG5

@14:8FE7; 			LOAD @-2 
@15:92E2; 			MUL @16384
@16:5F18;			JC next ohne store
@17:AFF6; 			STORE @ERG6

@18:8FE7; 			LOAD @-2 
@19:92E6; 			MUL @-16384
@1a:5F1C;			JC next ohne store
@1b:AFF7; 			STORE @ERG7

@1c:8FE9; 			LOAD @-3 
@1d:92E8; 			MUL @10923
@1e:5F20;			JC next ohne store
@1f:AFF8; 			STORE @ERG8

@20:2FFF; ENDE:		LOAD 0xFF  		Simulation wird durch Schreiben von 0xFF @0xFF gestopt
@21:AFFF; 			STORE @ENDSIM   -|
@e0:0004; 4
@e1:0005; 5
@e2:4000; 16384
@e3:0002; 2
@e4:FFFC; -4 
@e5:FFFB; -5
@e6:C000: -16384
@e7:FFFE: -2
@e8:2AAB: 10923
@e9:FFFD: -3
@f0:0000; @ERG0  4 * 	  5 =     20 = 0x0014
@f1:0000; @ERG1  4 * -    5 = -   20 = 0xFFEC
@f2:0000; @ERG2 -4 *      5 = -   20 = 0xFFEC
@f3:0000; @ERG3 -4 * -	  5 =     20 = 0x0014
@f4:0001; @ERG4  2 *  16384 =  32768 ==> OVERFLOW unverändert
@f5:0001; @ERG5  2 * -16384 = -32768 = 0x8000
@f6:0001; @ERG6 -2 *  16384 = -32768 = 0x8000
@f7:0001; @ERG7 -2 * -16384 =  32768 ==> OVERFLOW unverändert
@f8:0001; @ERG8 -3 *  10923 = -32769 ==> OVERFLOW unverändert
@ff:0000; @ENDSIM